#
# Manifest
#
plugin.vendor = Synopsys, Inc.
plugin.name = GNU Toolchain for ARC Build Support

#
# Build properties
#
extension.properties = Build Properties
buildArtifactType.application = ARC Baremetal Application
buildArtifactType.staticLib = ARC Cross ELF32 Target Static Library
buildArtifactType.axs101 = ARC AXS101 Projects
buildArtifactType.axs103 = ARC AXS103 Projects
buildArtifactType.emsk = ARC EM Starter Kit Projects
buildArtifactType.iotdk = ARC IoT Development Kit Projects
buildArtifactType.hsdk = ARC HS Development Kit Projects
buildArtifactType.emsdp = ARC EM SDP Projects
property.cpu = ARC CPU family
property.cpu.em = ARC EM CPU
property.cpu.hs = ARC HS CPU
property.cpu.hs6x = ARC HS6x CPU
property.cpu.arc700 = ARC700 CPU
property.cpu.arc600 = ARC600 CPU

#
# Build definitions
#
extension.buildDefinitions = Managed Build Definitions

# Base toolchain
base.platform = ARC Platform
base.builder = ARC GNU Builder

# Target processor
option.target = Target Processor
option.target.use_tcf = Use TCF
option.target.tcf_path = TCF Path
option.target.tcf_map = Use memory map from TCF
option.target.tcf_cinclude = Include C defines from TCF
# -mcpu=
option.target.cpu = Processor (-mcpu)
option.target.cpuem.arcem = -mcpu=arcem
option.target.cpuem.em = -mcpu=em
option.target.cpuem.em4 = -mcpu=em4
option.target.cpuem.em4_dmips = -mcpu=em4_dmips
option.target.cpuem.em4_fpus = -mcpu=em4_fpus
option.target.cpuem.em4_fpuda = -mcpu=em4_fpuda
option.target.cpuhs.archs = -mcpu=archs
option.target.cpuhs.hs = -mcpu=hs
option.target.cpuhs.hs34 = -mcpu=hs34
option.target.cpuhs.hs38 = -mcpu=hs38
option.target.cpuhs.hs38_linux = -mcpu=hs38_linux
option.target.cpuhs.hs4x = -mcpu=hs4x
option.target.cpuhs.hs4xd = -mcpu=hs4xd
option.target.cpu700.arc700 = -mcpu=arc700
option.target.cpu600.arc600 = -mcpu=arc600
# -mfpu=
option.target.fpu = FPU
option.target.fpuem.none = None (-mfpu=none)
option.target.fpuem.fpus = SP FPU (-mfpu=fpus)
option.target.fpuem.fpus_div = SP FPU with DIV/SQRT instructions (-mfpu=fpus_div)
option.target.fpuem.fpus_fma = SP FPU with fused instructions (-mfpu=fpus_fma)
option.target.fpuem.fpus_all = SP FPU with all instructions (-mfpu=fpus_all)
option.target.fpuem.fpuda = FPU with DP assist instructions (-mfpu=fpuda)
option.target.fpuem.fpuda_div = FPU with DP assist instructions and DIV/SQRT extensions (-mfpu=fpuda_div)
option.target.fpuem.fpuda_fma = FPU with DP assist instructions and fused extensions (-mfpu=fpuda_fma)
option.target.fpuem.fpuda_all = FPU with DP assist instructions and all extensions (-mfpu=fpuda_all)
option.target.fpuhs.none = None (-mfpu=none)
option.target.fpuhs.fpus = SP FPU (-mfpu=fpus)
option.target.fpuhs.fpus_div = SP FPU with DIV/SQRT instructions (-mfpu=fpus_div)
option.target.fpuhs.fpus_fma = SP FPU with fused instructions (-mfpu=fpus_fma)
option.target.fpuhs.fpus_all = SP FPU with all instructions (-mfpu=fpus_all)
option.target.fpuhs.fpud = DP FPU (-mfpu=fpud)
option.target.fpuhs.fpud_div = DP FPU with DIV/SQRT instructions (-mfpu=fpud_div)
option.target.fpuhs.fpud_fma = DP FPU with fused instructions (-mfpu=fpud_fma)
option.target.fpuhs.fpud_all = DP FPU with all instructions (-mfpu=fpud_all)
option.target.fpx.none = None
option.target.fpx.spfp = Single Precision FPX (-mspfp)
option.target.fpx.spfp_fast = Single Precision FPX, fast (-mspfp-fast)
option.target.fpx.spfp_compact = Single Precision FPX, compact (-mspfp-compact)
option.target.fpx.dpfp = Double Precision FPX (-mdpfp)
option.target.fpx.dpfp_fast = Double Precision FPX, fast (-mdpfp-fast)
option.target.fpx.dpfp_compact = Double Precision FPX, compact (-mdpfp-compact)
# -mmpy-option=
option.target.mpy = Multiply instructions
option.target.mpyem.none = No multiplier (-mmpy-option=none)
option.target.mpyem.w = 16x16 multiplier, fully pipelined (-mmpy-option=w)
option.target.mpyem.wlh1 = 32x32 multiplier, fully pipelined, 1 stage (-mmpy-option=wlh1)
option.target.mpyem.wlh2 = 32x32 multiplier, fully pipelined, 2 stages (-mmpy-option=wlh2)
option.target.mpyem.wlh3 = Two 16x16 multipliers, blocking, sequential (-mmpy-option=wlh3)
option.target.mpyem.wlh4 = One 16x16 multiplier, blocking, sequential (-mmpy-option=wlh4)
option.target.mpyem.wlh5 = One 32x4 multiplier, blocking, sequential (-mmpy-option=wlh5)
option.target.mpyhs.none = No multiplier (-mmpy-option=none)
option.target.mpyhs.mpy = -mmpy-option=mpy
option.target.mpyhs.plus_dmpy = -mmpy-option=plus_dmpy
option.target.mpyhs.plus_macd = -mmpy-option=plus_macd
option.target.mpyhs.plus_qmacw = -mmpy-option=plus_qmacw
option.target.mpy600.none = No multiplier
option.target.mpy600.mul32x16 = 32x16-bit multiply and multiply-accumulate instructions (-mmul32x16)
option.target.mpy600.mul64 = mul64 and mulu64 instructions (-mmul64)
# Other -m
option.target.divrem = Integer divide instructions (-mdiv-rem)
option.target.code_density = Code density (-mcode-density)
option.target.barrel_shifter = Barrel shifter (-mbarrel-shifter)
option.target.norm = Bitscan instruction (-mnorm)
option.target.swap = Swap instruction (-mswap)
option.target.ll64 = 64-bit load/store instructions (-mll64)
option.target.atomic = Atomic functions (-matomic)
option.target.ea = Extended Arithmetic Instructions (-mea)
option.target.xy = DSP XY memory (-mxy)
option.target.xy.tip = Passed down to the assembler to enable the XY memory extension. Also sets the preprocessor symbol __Xxy.
option.target.dpfplrsr = Forbid LR and SR to use FPX registers (-mno-dpfp-lrsr)
option.target.m128 = 128 bit load/store (-m128)
option.target.mcmodel = Use a specific memory model (-mcmodel)
option.target.mcmodel.small = Small (-mcmodel=small)
option.target.mcmodel.medium = Medium (-mcmodel=medium)
option.target.mcmodel.large = Large (-mcmodel=large)

# Additional tools
option.extratools = Additional Tools
option.printsize = Print size
option.listing = Create listing file
option.flash = Create flash image file

# Toolchains
toolchain.em = GNU Toolchain for ARC EM
toolchain.emeb = GNU Toolchain for ARC EM (big-endian)
toolchain.hs = GNU Toolchain for ARC HS
toolchain.hseb = GNU Toolchain for ARC HS (big-endian)
toolchain.hs6x = GNU Toolchain for ARC HS6x
toolchain.arc700 = GNU Toolchain for ARC700
toolchain.arc700eb = GNU Toolchain for ARC700 (big-endian)
toolchain.arc600 = GNU Toolchain for ARC600
toolchain.arc600eb = GNU Toolchain for ARC600 (big-endian)

# Tools
tool.c.compiler = ARC GNU C Compiler
tool.cpp.compiler = ARC GNU C++ Compiler
tool.assembler = ARC GNU Assembler
tool.c.linker = ARC GNU C Linker
tool.cpp.linker = ARC GNU C++ Linker
tool.archiver = ARC GNU Archiver
tool.flash = ARC GNU Create Flash Image
tool.listing = ARC GNU Create Listing
tool.printsize = ARC GNU Print Size
tool.c.compiler_eb = ARC GNU C Compiler (EB)
tool.cpp.compiler_eb = ARC GNU C++ Compiler (EB)
tool.assembler_eb = ARC GNU Assembler (EB)
tool.c.linker_eb = ARC GNU C Linker (EB)
tool.cpp.linker_eb = ARC GNU C++ Linker (EB)
tool.archiver_eb = ARC GNU Archiver (EB)
tool.flash_eb = ARC GNU Create Flash Image (EB)
tool.listing_eb = ARC GNU Create Listing (EB)
tool.printsize_eb = ARC GNU Print Size (EB)

# Compiler options
c.compiler.option.packstruct = Pack structures (-fpack-struct)
c.compiler.option.shortenums = Short enumerations (-fshort-enums)
c.compiler.option.function_sections = Function sections (-ffunction-sections)
c.compiler.option.data_sections = Data sections (-fdata-sections)
c.compiler.option.debug_format = Debug Format
c.compiler.option.debug_format.dwarf2 = dwarf-2
c.compiler.option.debug_format.dwarf4 = dwarf-4
c.compiler.option.debug_format.stabs = stabs
c.compiler.option.debug_format.stabsplus = stabs+
c.compiler.option.debug_format.gdb = gdb
c.compiler.option.lstfilename = Assembler Listing
c.compiler.option.no_inline_functions = Do not inline functions (-fno-inline-functions)
c.compiler.option.signed_char = 'char' is signed (-fsigned-char)
c.compiler.option.unsugned_bitfields = Bitfields are unsigned (-funsigned-bitfields)

# C++ compiler options
cpp.compiler.option.lang_std = Language Standard
cpp.compiler.option.lang_std.none =  
cpp.compiler.option.lang_std.cpp98 = ISO C++98 (-std=c++98)
cpp.compiler.option.lang_std.cpp11 = ISO C++11 (-std=c++0x)
cpp.compiler.option.lang_std.cpp1y = ISO C++1y (-std=c++1y)
cpp.compiler.option.nostdinccpp = Do not search system C++ directories (-nostdinc++)
cpp.compiler.option.wabi = ABI warnings (-Wabi)
cpp.compiler.option.weffcpp = Effective C++ warnings (-Weffc++)
cpp.compiler.option.noexceptions = Do not use exceptions (-fno-exceptions)
cpp.compiler.option.nortti = Do not use RTTI (-fno-rtti)

# Assembler options
assembler.option.flags = Assembler flags

# Linker options
category.general = General
linker.option.nano = Enable nano.specs to use standard libraries optimized for code size
linker.option.specs = Use GCC specs file
linker.option.specshs6x = Board type
linker.option.specshs6x.qemu = QEMU
linker.option.specshs6x.hl = nSIM/MDB
linker.option.specs.nsim = nsim
linker.option.specsem.emsk_em9d = emsk_em9d
linker.option.specsem.emsk_em11d = emsk_em11d
linker.option.specsem.emsdp = emsdp
linker.option.specs.nosys = nosys
linker.option.specs.none = None
linker.option.scriptfile = Script file (-T)
linker.option.memoryx = Directory with memory.x file
linker.category.libs = Libraries
category.misc = Miscellaneous
linker.option.mapfilename = Map Filename
linker.option.cref = Cross Reference (-Xlinker --cref)
linker.option.printmap = Print link map (-Xlinker --print-map)
linker.option.verbose = Verbose (-v)
linker.option.otherflags = Other flags

# Create flash options
category.output = Output
flash.option.output = Output file format (-O)
flash.option.output.ihex = ihex
flash.option.output.elf32_littlearc = elf32-littlearc
flash.option.output.elf32_bigarc = elf32-bigarc
flash.option.output.elf32_little = elf32-little
flash.option.output.elf32_big = elf32-big
flash.option.output.srec = srec
flash.option.output.symbolsrec = symbolsrec
flash.option.output.tekhex = tekhex
flash.option.output.binary = binary
flash.category.section = Section
flash.option.section_text = Section: -j .text
flash.option.section_data = Section: -j .data
flash.option.section_other = Other (-j)
flash.option.other = Other options

# Create listing options
listing.option.other = Other flags

# Print size options
printsize.option.format = Size Format
printsize.option.format.berkeley = Berkeley
printsize.option.format.sysv = SysV
printsize.option.hex = Hex
printsize.option.totals = Show Totals
printsize.option.other = Other flags

# Configurations
configuration.debug = Debug
configuration.release = Release

#
# Scanner Discovery Profile
#
extension.scdprofile.c.arc = ARC GNU C managed make per project SCD profile
